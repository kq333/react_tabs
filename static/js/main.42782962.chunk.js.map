{"version":3,"sources":["components/Tabs/TabList.tsx","App.tsx","index.tsx"],"names":["TabList","_ref","_tabs$find","tabs","selectedTabId","onTabClick","_jsxs","children","_jsx","className","map","tab","id","href","concat","onClick","tabId","title","find","content","App","_useState","useState","_useState2","_slicedToArray","setSelectedTabId","selectedTab","ReactDOM","render","document","getElementById"],"mappings":"iMASaA,EAAkC,SAAHC,GAIrC,IAADC,EAHJC,EAAIF,EAAJE,KACAC,EAAaH,EAAbG,cACAC,EAAUJ,EAAVI,WAMA,OACEC,eAAA,OAAK,UAAQ,gBAAeC,SAAA,CAC1BC,cAAA,OAAKC,UAAU,gBAAeF,SAC5BC,cAAA,MAAAD,SACGJ,EAAKO,KAAI,SAACC,GAAG,OACZH,cAAA,MACEC,UAAWL,IAAkBO,EAAIC,GAAK,YAAc,GACpD,UAAQ,MAAKL,SAGbC,cAAA,KACEK,KAAI,IAAAC,OAAMH,EAAIC,IACd,UAAQ,UACRG,QAAS,kBAjBCC,EAiBoBL,EAAIC,QAhB9CP,EAAWW,GADU,IAACA,CAiB2B,EAACT,SAErCI,EAAIM,SAPFN,EAAIC,GASN,QAIXJ,cAAA,OAAKC,UAAU,QAAQ,UAAQ,aAAYF,SACI,QADJL,EACxCC,EAAKe,MAAK,SAACP,GAAG,OAAKA,EAAIC,KAAOR,CAAa,WAAC,IAAAF,OAAA,EAA5CA,EAA8CiB,YAIvD,ECtCahB,EAAO,CAClB,CAAES,GAAI,QAASK,MAAO,QAASE,QAAS,eACxC,CAAEP,GAAI,QAASK,MAAO,QAASE,QAAS,eACxC,CAAEP,GAAI,QAASK,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAC3B,IAAAC,EAA0CC,mBAASnB,EAAK,GAAGS,IAAGW,EAAAC,YAAAH,EAAA,GAAvDjB,EAAamB,EAAA,GAAEE,EAAgBF,EAAA,GAEhCG,EAAcvB,EAAKe,MAAK,SAACP,GAAG,OAAKA,EAAIC,KAAOR,CAAa,IAQ/D,OACEE,eAAA,OAAKG,UAAU,UAASF,SAAA,CACtBC,cAAA,MAAIC,UAAU,QAAOF,SAAA,mBAAAO,OAAgC,OAAXY,QAAW,IAAXA,OAAW,EAAXA,EAAaT,SAEvDT,cAACR,EAAO,CACNG,KAAMA,EACNC,cAAeA,EACfC,WAbiB,SAACW,GAClBZ,IAAkBY,GACpBS,EAAiBT,EAErB,MAaF,EC/BAW,IAASC,OAAOpB,cAACY,EAAG,IAAKS,SAASC,eAAe,Q","file":"static/js/main.42782962.chunk.js","sourcesContent":["import React from 'react';\nimport { Tab } from '../../type/Tabs';\n\ninterface TabListProps {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabClick: (tabId: string) => void;\n}\n\nexport const TabList: React.FC<TabListProps> = ({\n  tabs,\n  selectedTabId,\n  onTabClick,\n}) => {\n  const handleTabClick = (tabId: string) => {\n    onTabClick(tabId);\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              className={selectedTabId === tab.id ? 'is-active' : ''}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleTabClick(tab.id)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find((tab) => tab.id === selectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { TabList } from './components/Tabs/TabList';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const selectedTab = tabs.find((tab) => tab.id === selectedTabId);\n\n  const handleTabClick = (tabId: string) => {\n    if (selectedTabId !== tabId) {\n      setSelectedTabId(tabId);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">{`Selected tab is ${selectedTab?.title}`}</h1>\n\n      <TabList\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabClick={handleTabClick}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}